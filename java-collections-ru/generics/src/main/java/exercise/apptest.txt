package exercise;
//run workflow
import java.util.*;
import java.util.Map.Entry;

// BEGIN
class App {
    public static void main(String[] args) {
        Map<String, String> where = new HashMap<>(Map.of("author", "Shakespeare", "year", "1611"));

        List<Map<String, String>> books = new ArrayList<>();
        Map<String, String> book1 = new HashMap<>(
                Map.of("title", "Cymbeline", "author", "Shakespeare", "year", "1611")
        );
        Map<String, String> book2 = new HashMap<>(
                Map.of("title", "Book of Fooos", "author", "FooBar", "year", "1111")
        );
        Map<String, String> book3 = new HashMap<>(
                Map.of("title", "The Tempest", "author", "Shakespeare", "year", "1611")
        );
        Map<String, String> book4 = new HashMap<>(
                Map.of("title", "Book of Foos Barrrs", "author", "FooBar", "year", "2222")
        );
        Map<String, String> book5 = new HashMap<>(
                Map.of("title", "Still foooing", "author", "FooBar", "year", "3333")
        );

        books.add(book1);
        books.add(book2);
        books.add(book3);
        books.add(book4);
        books.add(book5);
        List<Map<String, String>> result = App.findWhere(books, where);

        System.out.println(result);


    }

    public static List<Map<String, String>> findWhere(List<Map<String, String>> library, Map<String, String> libCard) {
        List<Map<String, String>> result = new ArrayList<>();
//        Map<String, String> book1 = new HashMap<>(
//                Map.of("title", "Cymbeline", "author", "Shakespeare", "year", "1611")
//        );
//        List<Map<String, String>> books = new ArrayList<>();
//        System.out.println(book1);
//        System.out.println(books);
//        return books;

        for (Iterator<Map<String, String>> iterator = library.iterator(); iterator.hasNext(); ) {
            Map<String, String> book = iterator.next();
            if (isMapContainsSubmap(book, libCard)) {
                result.add(book);
            }

        }
        return result;


    }

    public static boolean isMapContainsSubmap (Map<String, String> map, Map<String, String> submap) {
        boolean result = true;
        for (String key : submap.keySet()) {
            if (!submap.get(key).equals(map.get(key))) {
                result = false;
                break;
            }
        }
        return result;
    }
}
//END
